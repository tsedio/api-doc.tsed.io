(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{778:function(t,e,a){"use strict";a.r(e);var s=a(1),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"decorator-injectable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decorator-injectable"}},[t._v("#")]),t._v(" Decorator Injectable")]),t._v(" "),a("Badge",{attrs:{text:"Decorator",type:"decorator"}}),t._v(" "),a("section",{staticClass:"table-features"},[a("table",{staticClass:"is-full-width"},[a("tbody",[a("tr",[a("th",[t._v("Module")]),a("td",[a("div",{staticClass:"lang-typescript"},[a("span",{staticClass:"token keyword"},[t._v("import")]),t._v(" { Injectable } "),a("span",{staticClass:"token keyword"},[t._v("from")]),t._v(" "),a("span",{staticClass:"token string"},[t._v('"@tsed/di"')])])])]),a("tr",[a("th",[t._v("Source")]),a("td",[a("a",{attrs:{href:"https://github.com/tsedio/tsed/blob/v7.54.0/packages/di/src/types/common/decorators/injectable.ts#L0-L0"}},[t._v("/packages/di/src/types/common/decorators/injectable.ts")])])])])])]),t._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),a("div",{staticClass:"language-typescript"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[t._v("function "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("a",{pre:!0,attrs:{href:"/api/specs/schema/types/decorators/operations/Partial.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[t._v("Partial")])]),t._v("<"),a("a",{pre:!0,attrs:{href:"/api/di/types/common/interfaces/ProviderOpts.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[t._v("ProviderOpts")])]),t._v(">"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ClassDecorator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])]),t._v(" "),a("h2",{attrs:{id:"description"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),a("p",[t._v("The decorators "),a("code",[t._v("@Injectable()")]),t._v(" a new service can be injected in other service, controller, interceptor, etc.. on there "),a("code",[t._v("constructor")]),t._v(".\nAll classes annotated with "),a("code",[t._v("@Injectable()")]),t._v(" are built one time, excepted if you change the default provider configuration.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",[t._v("@Injectable()")]),t._v(" use the "),a("code",[t._v("reflect-metadata")]),t._v(" to collect and inject the built provided to other services.")])]),t._v(" "),a("h3",{attrs:{id:"options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),a("ul",[a("li",[t._v("type ("),a("ApiSymbolName",[t._v("ProviderType")]),t._v("  or "),a("code",[t._v("string")]),t._v("): Kind of provider. (Default: "),a("code",[t._v("ProviderType.PROVIDER")]),t._v(")")],1),t._v(" "),a("li",[t._v("scope ("),a("ApiSymbolName",[t._v("ProviderScope")]),t._v("): Kind of provider. (Default: "),a("code",[t._v("ProviderScope.SINGLETON")]),t._v(")")],1),t._v(" "),a("li",[t._v("provide ("),a("ApiSymbolName",[t._v("TokenProvider")]),t._v("): An injection token (Note: This option override default metadata generated by Typescript).")],1),t._v(" "),a("li",[t._v("deps ("),a("code",[t._v("Type<any>")]),t._v("): List of class or provider which will be injected to the constructor (Note: This options override default metadata generated by Typescript).")])])],1)}),[],!1,null,null,null);e.default=r.exports}}]);